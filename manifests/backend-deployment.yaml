apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: back
spec:
  type: ClusterIP
  ports:
    - port: 7000
      targetPort: 8080
  selector:
    app: myapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: back
  labels:
    app: test
spec:
  selector:
    matchLabels:
      app: myapp
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - image: andrey4281/otussecondtask:0.0.1
          name: crudservice
          env:
            - name: RDS_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: otus-app-config
                  key: rds-host-name
            - name: RDS_PORT
              valueFrom:
                configMapKeyRef:
                  name: otus-app-config
                  key: rds-port
            - name: RDS_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: otus-app-config
                  key: rds-db-name
            - name: RDS_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: otus-app-config
                  key: rds-user-name
            - name: RDS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: otus-app-secrets
                  key: psqluserpass
          ports:
            - containerPort: 8080
          imagePullPolicy: IfNotPresent